// ─────────────────────────────────────────────────────────────────────────────
// HOME PAGE STYLES
// Below-the-fold styles for the homepage that load after critical styles.
// The first section of the home page should go in critical.scss, while the
// rest of the home page styles go in here.
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #RPsbs-313,
  #RPsbsr-313 {
    background-color: #f7f7f7;
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: left;
      width: 100%;
      max-width: calc(542 / 16 * 1rem);
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: flex-start;
    }

    .cs-text {
      margin-bottom: calc(16 / 16 * 1rem);
      &:last-of-type {
        margin-bottom: calc(32 / 16 * 1rem);
      }
    }

    .cs-quote {
      margin: 0 0 calc(32 / 16 * 1rem) 0;
      /* 16px - 32px */
      padding: clamp(1rem, 3vw, 2rem);
      background-color: var(--bodyTextColorWhite);
      border-radius: calc(16 / 16 * 1rem);
      position: relative;
    }

    .cs-quote-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      margin: 0 0 calc(16 / 16 * 1rem);
      color: #3f3f3f;
      display: block;
    }

    .cs-name {
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.2em;
      text-transform: uppercase;
      font-weight: bold;
      margin: 0 0 calc(4 / 16 * 1rem);
      color: var(--headerColor);
      display: block;
    }

    .cs-job {
      font-size: calc(14 / 16 * 1rem);
      line-height: 1.5em;
      color: #3f3f3f;
      display: block;
    }

    .cs-quote-icon {
      /* 60px - 136px */
      width: clamp(3.75rem, 10vw, 8.5rem);
      height: auto;
      position: absolute;
      bottom: calc(0 / 16 * 1rem);
      /* 16px - 32px */
      right: clamp(1rem, 4vw, 2rem);
    }

    .cs-image-group {
      /* scaling the font size with the view width */
      font-size: min(2.31vw, 0.7em);
      /* using ems so we can use font size to scale the whole section */
      width: calc(631 / 16 * 1em);
      height: calc(636 / 16 * 1em);
      position: relative;
    }

    .cs-picture {
      border-radius: calc(24 / 16 * 1em);
      /* clips img tag corners */
      overflow: hidden;
      position: absolute;
      display: block;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* makes image act like a background image */
        object-fit: cover;
      }
    }

    .cs-picture1 {
      width: calc(522 / 16 * 1em);
      height: calc(581 / 16 * 1em);
      left: 0;
      top: 0;
    }

    .cs-picture2 {
      width: calc(414 / 16 * 1em);
      height: calc(400 / 16 * 1em);
      background-color: #fff;
      box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
      /* 6px - 12px */
      border: clamp(0.375em, 1.5vw, 0.75em) solid #fff;
      right: 0;
      bottom: 0;
    }
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #RPsbs-313,
  #RPsbsr-313 {
    .cs-container {
      flex-flow: row;
      justify-content: space-between;
      gap: calc(52 / 16 * 1rem);
    }

    .cs-image-group {
      font-size: min(1.2vw, 1em);
      flex: none;
    }

    .cs-content {
      margin: 0;
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #RPsbs-313,
    #RPsbsr-313 {
      background-color: #333;
      .cs-image-group {
        &:before,
        &:after {
          background: var(--accent);
        }
      }

      .cs-picture2 {
        background-color: var(--dark);
        /* 6px - 12px */
        border: clamp(0.375em, 1.5vw, 0.75em) solid var(--dark);
      }

      .cs-topper {
        color: var(--primaryLight);
      }

      .cs-title,
      .cs-text,
      .cs-h3,
      .cs-quote-text,
      .cs-name {
        color: var(--bodyTextColorWhite);
      }

      .cs-quote {
        background-color: var(--accent);
      }

      .cs-job {
        color: var(--bodyTextColorWhite);
        opacity: 0.8;
      }

      .cs-quote-icon {
        opacity: 0.2;
      }
    }
  }
}

/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #services-448 {
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      /* changes at 1280px at tablet */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-card-group {
      width: 100%;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      /* 16px - 20px */
      column-gap: clamp(1rem, 1.5vw, 1.25rem);
      /* 24px - 60px */
      row-gap: clamp(1.5rem, 5vw, 3.75rem);
    }

    .cs-item {
      list-style: none;
      width: 100%;
      max-width: calc(360 / 16 * 1rem);
      /* changes at desktop */
      padding-top: calc(144 / 10 * 1rem);
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      &:hover {
        .cs-picture {
          img {
            transform: scale(1.2);
            opacity: 0.4;
          }
        }

        .cs-flex {
          &:before {
            opacity: 1;
          }
        }
      }
    }

    .cs-picture {
      width: 100%;
      /* changes at desktop */
      height: calc(250 / 16 * 1rem);
      border-radius: calc(8 / 16 * 1rem);
      background-color: var(--primary);
      /* clips the corners of the image */
      overflow: hidden;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* makes it behave like a background image */
        object-fit: cover;
        /* positions top of image to the top of the container */
        object-position: top;
        transition: transform 0.9s, opacity 0.5s;
      }
    }

    .cs-flex {
      text-align: center;
      width: 88%;
      padding: 0 calc(24 / 16 * 1rem) calc(24 / 16 * 1rem) calc(24 / 16 * 1rem);
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      border: 1px solid #dad9e3;
      border-radius: calc(12 / 16 * 1rem);
      background-color: #fff;
      box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      position: relative;
      &:before {
        /* hover border box */
        content: '';
        background: transparent;
        /* prevents the mouse from interacting with it */
        pointer-events: none;
        border: 4px solid var(--primary);
        border-radius: calc(12 / 16 * 1rem);
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        opacity: 0;
        position: absolute;
        display: block;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        transition: opacity 0.5s;
      }
    }

    .cs-wrapper {
      /* 80px - 120px */
      width: clamp(5rem, 9.2vw, 7.5rem);
      height: clamp(5rem, 9.2vw, 7.5rem);
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      /* we use the same clamp value for height & width, but multiple by -.5 so it will be a negative value, and be half of the height.  Negative margins pull things toward the element so they overlap them, in this case we want the .cs-wrapper to overlap .cs-flex by half its height, so we use the same clamp for height and half it for the margin top value */
      margin-top: calc(clamp(5rem, 9.2vw, 7.5rem) * -0.5);
      border-radius: 50%;
      border: 4px solid var(--primary);
      background-color: #fff;
      /* prevents border from affecting height and width */
      box-sizing: border-box;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      z-index: 10;
    }

    .cs-icon {
      /* 48px - 64px */
      // width: clamp(3rem, 4.3vw, 4rem);
      width: 64px;
      height: auto;
      display: block;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 1.9vw, 1.5625rem);
      line-height: 1.2em;
      font-weight: 700;
      margin: 0 0 calc(8 / 16 * 1rem) 0;
      color: var(--headerColor);
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      font-weight: 400;
      /* 20px - 24px */
      margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
      color: var(--bodyTextColor);
    }

    .cs-link {
      /* 16px - 20px */
      font-size: clamp(1rem, 1.5vw, 1.25rem);
      line-height: 1.5em;
      font-weight: 700;
      text-transform: uppercase;
      text-decoration: none;
      margin: 0;
      color: var(--primary);
      display: inline-block;
      position: relative;

      &:hover {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* animated underline */
        content: '';
        width: 0%;
        height: 3px;
        background: currentColor;
        opacity: 1;
        position: absolute;
        display: block;
        bottom: calc(-2 / 16 * 1rem);
        left: 0;
        transition: width 0.3s;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #services-448 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-card-group {
      flex-direction: row;
    }

    .cs-item {
      width: 47%;
    }
  }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #services-448 {
    .cs-card-group {
      flex-wrap: nowrap;
    }
    .cs-item {
      width: 100%;
      /* 144px - 274px */
      padding-top: clamp(18rem, 17.5vw, 25rem);
    }

    .cs-picture {
      /* 224px - 428px */
      height: clamp(12rem, 28vw, 26.75rem);
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #services-448 {
      .cs-topper {
        color: var(--primaryLight);
      }

      .cs-title {
        color: var(--bodyTextColorWhite);
      }

      .cs-text {
        color: var(--bodyTextColorWhite);
        opacity: 0.8;
      }

      .cs-flex,
      .cs-wrapper {
        background-color: var(--medium);
      }

      .cs-h3,
      .cs-item-text {
        color: var(--bodyTextColorWhite);
      }

      .cs-link {
        color: var(--primaryLight);
      }
    }
  }
}

/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #gallery-48 {
    background-color: #ffefae;
    padding: var(--sectionPadding);
    position: relative;

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-title {
      margin: 0;
      max-width: 20ch;
    }

    .cs-image-group {
      /* used rem so it doesn't scale with the font size of on parent */
      font-size: min(1.1vw, 1em);
      width: 100%;
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      /* 8px - 20px */
      gap: clamp(0.5rem, 2vw, 1.25rem);
    }

    .cs-row {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      /* 8px - 20px */
      gap: clamp(0.5rem, 2vw, 1.25rem);
    }

    .cs-picture {
      width: 100%;
      position: relative;
      display: block;
      border-radius: calc(8 / 16 * 1rem);
      overflow: hidden;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        object-fit: cover;
      }
    }

    .cs-row-1 {
      .cs-picture-1 {
        height: calc(567 / 16 * 1em);
      }

      .cs-picture-2 {
        height: calc(629 / 16 * 1em);
      }

      .cs-picture-3 {
        height: calc(512 / 16 * 1em);
      }
    }

    .cs-row-2 {
      .cs-picture-1 {
        height: calc(492 / 16 * 1em);
      }

      .cs-picture-2 {
        height: calc(517 / 16 * 1em);
      }

      .cs-picture-3 {
        height: calc(629 / 16 * 1em);
      }
    }

    .cs-row-3 {
      .cs-picture-1 {
        height: calc(625 / 16 * 1em);
      }

      .cs-picture-2 {
        height: calc(452 / 16 * 1em);
      }

      .cs-picture-3 {
        height: calc(629 / 16 * 1em);
      }
    }
  }
}

/* Dark mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #gallery-48 {
      background-color: transparent;
      .cs-title {
        color: var(--bodyTextColorWhite);
      }
    }
  }
}

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #reviews-67 {
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    .cs-card-group {
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      column-gap: calc(20 / 16 * 1rem);
      row-gap: calc(64 / 16 * 1rem);
    }

    .cs-item {
      text-align: left;
      list-style: none;
      width: 100%;
      max-width: calc(630 / 16 * 1rem);
      /* pushes up the same amount the cs-item-img overlaps the card */
      margin: calc(40 / 16 * 1rem) 0 0 0;
      /* Padding L & R - 16px - 32px */
      padding: calc(60 / 16 * 1rem) clamp(1rem, 3.2vw, 2rem) 0;
      /* 32px - 40px */
      padding-bottom: clamp(2rem, 5.4vw, 2.5rem);
      box-shadow: 0px 20px 39px 0px rgba(0, 0, 0, 0.05);
      border-radius: calc(8 / 16 * 1rem);
      background: #fff;
      position: relative;
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      align-items: center;
      /* Prevents padding from affecting height & width */
      box-sizing: border-box;

      &:last-of-type {
        margin-bottom: 0;
      }
    }

    .cs-item-img {
      width: calc(80 / 16 * 1rem);
      height: calc(80 / 16 * 1rem);
      position: absolute;
      top: calc(-40 / 16 * 1rem);
      filter: invert(58%) sepia(13%) saturate(3041%) hue-rotate(328deg)
        brightness(104%) contrast(101%);
    }

    .cs-item-text {
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.5em;
      margin: 0 0 calc(20 / 16 * 1rem);
      padding-bottom: calc(20 / 16 * 1rem);
      color: var(--bodyTextColor);
      border-bottom: 1px solid #e8e9ec;
    }

    .cs-info {
      width: 100%;
      /* margin-top auto pushes up against the rest of the card, that way when one card has more text than the other, the reviewer info is always pushed to the bottom and lined up with the rest of them.  This ensures better responsiveness for changing content */
      margin: auto 0 0 0;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .cs-flex-group {
      width: 100%;
      margin: 0;
    }

    .cs-name {
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.5em;
      font-weight: 700;
      width: 40%;
      margin: 0;
      display: block;
      color: var(--headerColor);
    }

    .cs-desc {
      font-size: calc(14 / 16 * 1rem);
      font-weight: 400;
      color: #3f3f3f;
      display: block;
    }

    .cs-item-stars {
      width: calc(96 / 16 * 1rem);
      height: calc(16 / 16 * 1rem);
    }

    .cs-button-solid {
      font-size: calc(16 / 16 * 1rem);
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-decoration: none;
      font-weight: 700;
      text-align: center;
      margin: 0;
      color: #fff;
      min-width: calc(150 / 16 * 1rem);
      padding: 0 calc(24 / 16 * 1rem);
      background-color: var(--primary);
      border-radius: calc(4 / 16 * 1rem);
      display: inline-block;
      position: relative;
      z-index: 1;
      /* prevents padding from adding to the width */
      box-sizing: border-box;

      &:before {
        content: '';
        position: absolute;
        height: 100%;
        width: 0%;
        background: #000;
        opacity: 1;
        top: 0;
        left: 0;
        z-index: -1;
        border-radius: calc(4 / 16 * 1rem);
        transition: width 0.3s;
      }

      &:hover {
        &:before {
          width: 100%;
        }
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #reviews-67 {
    .cs-card-group {
      flex-direction: row;
      justify-content: space-between;
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #reviews-67 {
      background-color: #1434a4;
      .cs-topper {
        color: var(--primaryLight);
      }
      .cs-title,
      .cs-text,
      .cs-item-text,
      .cs-name {
        color: var(--bodyTextColorWhite);
      }

      .cs-item {
        background: rgba(0, 0, 0, 0.2);
      }

      .cs-desc {
        color: var(--primaryLight);
      }
    }
  }
}

/*-- -------------------------- -->
<---        Why Choose          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #why-choose-289 {
    text-align: center;
    padding: var(--sectionPadding);

    .cs-container {
      width: 100%;
      /* changes to 1280px on tablet */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: left;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: flex-start;
    }

    .cs-text {
      max-width: calc(522 / 16 * 1rem);
    }

    .cs-card-group {
      width: 100%;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      gap: calc(16 / 16 * 1rem);
    }

    .cs-item {
      list-style: none;
      text-align: left;
      width: 100%;
      padding: calc(32 / 16 * 1rem);
      background-color: #f7f7f7;
      border-radius: calc(16 / 16 * 1rem);
      /* prevents padding from adding to height and width */
      box-sizing: border-box;
      transition: background-color 0.3s;
      &:hover {
        background-color: var(--primary);
        cursor: pointer;

        .cs-icon {
          filter: invert(100%) sepia(78%) saturate(2%) hue-rotate(81deg)
            brightness(116%) contrast(101%);
        }

        .cs-h3 {
          color: var(--bodyTextColorWhite);
        }

        .cs-item-text {
          color: var(--bodyTextColorWhite);
        }
      }
    }

    .cs-icon {
      width: auto;
      height: calc(48 / 16 * 1rem);
      margin-bottom: calc(24 / 16 * 1rem);
      display: block;
      transition: filter 0.3s;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
      line-height: 1.2em;
      margin: 0;
      margin-bottom: calc(16 / 16 * 1rem);
      color: var(--headerColor);
      transition: color 0.3s;
    }

    .cs-item-text {
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.5em;
      margin: 0;
      color: var(--bodyTextColor);
      transition: color 0.3s;
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #why-choose-289 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-content {
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-end;
      gap: calc(64 / 16 * 1rem);
    }

    .cs-flex {
      width: 50%;
    }

    .cs-title {
      margin: 0;
    }

    .cs-card-group {
      justify-content: space-between;
      /* makes sure every box "stretches" to be the same height as the tallest box */
      align-items: stretch;
      flex-direction: row;
      /* 16px - 20px */
      gap: clamp(1rem, 1.5vw, 1.25rem);
    }

    .cs-item {
      width: auto;
      /* 16px - 32px */
      padding: calc(32 / 16 * 1rem) clamp(1rem, 2.1vw, 2rem);
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #why-choose-289 {
      background-color: #3c3c3c;

      .cs-title,
      .cs-text,
      .cs-h3,
      .cs-item-text {
        color: var(--bodyTextColorWhite);
      }

      .cs-item {
        background-color: var(--accent);
        &:hover {
          background-color: var(--primary);
        }
      }

      .cs-icon {
        /* makes it so bright it turns white */
        filter: brightness(1000%);
      }
    }
  }
}

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #hero-1785 {
    /* 200px - 300px - leaving extra space for the navigation */
    padding: clamp(12.5rem, 25.95vw, 18.75em) calc(16 / 16 * 1rem);
    /* prevents the topper line from causing an overflow */
    overflow: hidden;
    position: relative;
    z-index: 1;

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
      gap: calc(48 / 16 * 1rem);
    }

    .cs-content {
      text-align: center;
      width: 100%;
      max-width: calc(750 / 16 * 1rem);
    }

    .cs-title {
      /* 49px - 84px */
      font-size: clamp(3.0625rem, 6vw, 5.25rem);
    }

    .cs-title,
    .cs-text {
      color: var(--bodyTextColorWhite);
    }

    .cs-text {
      margin-bottom: calc(32 / 16 * 1rem);
    }

    .cs-button-group {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-button-solid {
      font-size: calc(16 / 16 * 1rem);
      font-weight: 700;
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-align: center;
      text-decoration: none;
      min-width: calc(200 / 16 * 1rem);
      margin: 0;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
      padding: 0 calc(24 / 16 * 1rem);
      background-color: var(--primary);
      color: var(--bodyTextColorWhite);
      border-radius: calc(4 / 16 * 1rem);
      display: inline-block;
      position: relative;
      z-index: 1;

      &:before {
        content: '';
        width: 0%;
        height: 100%;
        background: #000;
        opacity: 1;
        border-radius: calc(4 / 16 * 1rem);
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: width 0.3s;
      }

      &:hover {
        &:before {
          width: 100%;
        }
      }
    }

    .cs-graphic {
      width: 100%;
      min-width: calc(1920 / 16 * 1rem);
      height: auto;
      object-fit: cover;
      position: absolute;
      bottom: 0;
      left: 50%;
      z-index: 0;
      transform: translateX(-50%);
    }

    .cs-graphic-dark {
      display: none;
    }

    .cs-background {
      width: 100%;
      height: 100%;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -2;

      &:before {
        /* Overlay */
        content: '';
        width: 100%;
        height: 100%;
        background: #000;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
        opacity: 0.7;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
      }

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        position: absolute;
        top: 0;
        left: 0;
      }
    }
  }
}

/* Large Desktop - 1920px */
@media only screen and (min-width: 120rem) {
  #hero-1785 {
    /* this ties the padding bottom value to the size of the screen width. The wider the image gets the taller it gets, meaning it will get clsoer and closer to the content. This makes the padding bottom value grow with the screen size so it accounts for the growing height of the svg graphic getting taller */
    padding-bottom: 14vw;
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #hero-1785 {
      .cs-background {
        &:before {
          opacity: 0.85;
        }
      }

      .cs-graphic {
        display: none;
      }

      .cs-graphic-dark {
        display: block;
        filter: brightness(0) saturate(100%) invert(26%) sepia(80%)
          saturate(5807%) hue-rotate(14deg) brightness(84%) contrast(90%);
      }
    }
  }
}
